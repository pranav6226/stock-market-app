{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/SU/Spring'25/IST 615 - Cloud Management/stock-market-app/src/components/Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = ({\n  API_URLS,\n  onSelectStock\n}) => {\n  _s();\n  const [watchlist, setWatchlist] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [newSymbol, setNewSymbol] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  // Fetch data for all watchlist symbols\n  const fetchWatchlistData = useCallback(async symbols => {\n    if (!symbols || symbols.length === 0) return;\n    setLoading(true);\n    const watchlistData = [];\n    for (const symbol of symbols) {\n      try {\n        // Try each API URL until one works\n        for (let i = 0; i < API_URLS.length; i++) {\n          try {\n            const response = await axios.get(`${API_URLS[i]}?symbol=${symbol}`, {\n              timeout: 3000\n            } // Short timeout since we're fetching multiple stocks\n            );\n            if (response.data && !response.data.error) {\n              watchlistData.push({\n                symbol: response.data['01. symbol'],\n                price: parseFloat(response.data['05. price']),\n                change: parseFloat(response.data['09. change']),\n                changePercent: response.data['10. change percent'],\n                volume: parseInt(response.data['06. volume'])\n              });\n              break; // Exit the loop if successful\n            }\n          } catch (err) {\n            if (i === API_URLS.length - 1) {\n              console.error(`Failed to fetch data for ${symbol}`);\n              // Add with minimal data if API fails\n              watchlistData.push({\n                symbol: symbol,\n                price: 0,\n                change: 0,\n                changePercent: '0.00%',\n                volume: 0,\n                error: true\n              });\n            }\n          }\n        }\n      } catch (err) {\n        console.error(`Error fetching data for ${symbol}:`, err);\n      }\n    }\n    setWatchlist(watchlistData);\n    setLoading(false);\n    setDataLoaded(true);\n\n    // Save to localStorage (would be DynamoDB in AWS implementation)\n    localStorage.setItem('stockWatchlist', JSON.stringify(watchlistData));\n  }, [API_URLS, setLoading, setWatchlist, setDataLoaded]);\n\n  // Fetch watchlist data from API\n  useEffect(() => {\n    // Skip if data is already loaded\n    if (dataLoaded && watchlist.length > 0) {\n      return;\n    }\n\n    // For now, we'll use localStorage to simulate a backend server\n    // In the final implementation, this would be replaced with DynamoDB through API Gateway\n    const loadWatchlist = () => {\n      const savedWatchlist = localStorage.getItem('stockWatchlist');\n      if (savedWatchlist) {\n        try {\n          const parsedWatchlist = JSON.parse(savedWatchlist);\n          // Only load symbols, we'll fetch the latest data\n          const symbols = parsedWatchlist.map(item => item.symbol);\n          fetchWatchlistData(symbols);\n        } catch (e) {\n          console.error('Error loading watchlist from localStorage:', e);\n          // Start with default watchlist if there's an error\n          fetchWatchlistData(['AAPL', 'MSFT', 'GOOG']);\n        }\n      } else {\n        // Start with default watchlist if none exists\n        fetchWatchlistData(['AAPL', 'MSFT', 'GOOG']);\n      }\n    };\n    loadWatchlist();\n  }, [dataLoaded, watchlist.length, API_URLS, fetchWatchlistData]);\n\n  // Add a new symbol to watchlist\n  const handleAddToWatchlist = async () => {\n    if (!newSymbol) return;\n    const symbol = newSymbol.toUpperCase();\n\n    // Check if already in watchlist\n    if (watchlist.some(item => item.symbol === symbol)) {\n      setNewSymbol('');\n      return;\n    }\n    setLoading(true);\n    setDataLoaded(false); // Reset data loaded flag\n\n    try {\n      // Try each API URL to validate the symbol\n      for (let i = 0; i < API_URLS.length; i++) {\n        try {\n          const response = await axios.get(`${API_URLS[i]}?symbol=${symbol}`, {\n            timeout: 5000\n          });\n          if (response.data && !response.data.error) {\n            const newItem = {\n              symbol: response.data['01. symbol'],\n              price: parseFloat(response.data['05. price']),\n              change: parseFloat(response.data['09. change']),\n              changePercent: response.data['10. change percent'],\n              volume: parseInt(response.data['06. volume'])\n            };\n            const updatedWatchlist = [...watchlist, newItem];\n            setWatchlist(updatedWatchlist);\n            localStorage.setItem('stockWatchlist', JSON.stringify(updatedWatchlist));\n            setNewSymbol('');\n            setLoading(false);\n            setDataLoaded(true); // Mark data as loaded\n            return;\n          }\n        } catch (err) {\n          if (i === API_URLS.length - 1) {\n            setError(`Could not find symbol: ${symbol}`);\n            setTimeout(() => setError(null), 3000);\n          }\n        }\n      }\n    } catch (err) {\n      setError('Error adding to watchlist');\n      setTimeout(() => setError(null), 3000);\n    }\n    setLoading(false);\n    setNewSymbol('');\n  };\n\n  // Remove a symbol from watchlist\n  const handleRemoveFromWatchlist = symbol => {\n    const updatedWatchlist = watchlist.filter(item => item.symbol !== symbol);\n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('stockWatchlist', JSON.stringify(updatedWatchlist));\n  };\n\n  // Handle stock selection\n  const handleSelectStock = symbol => {\n    if (onSelectStock) {\n      onSelectStock(symbol);\n    }\n  };\n\n  // Refresh watchlist data\n  const handleRefreshWatchlist = () => {\n    const symbols = watchlist.map(item => item.symbol);\n    setDataLoaded(false); // Reset data loaded flag for refresh\n    fetchWatchlistData(symbols);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefreshWatchlist,\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'Refresh'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSymbol,\n        onChange: e => setNewSymbol(e.target.value),\n        placeholder: \"Add symbol (e.g., AAPL)\",\n        maxLength: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToWatchlist,\n        disabled: loading || !newSymbol,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this), watchlist.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-watchlist\",\n      children: \"Your watchlist is empty. Add stocks to track them here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"watchlist-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: watchlist.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"watchlist-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              onClick: () => handleSelectStock(stock.symbol),\n              children: stock.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", stock.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: stock.change >= 0 ? 'price-up' : 'price-down',\n            children: [stock.change >= 0 ? '+' : '', stock.change.toFixed(2), \" (\", stock.changePercent, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stock.volume.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"watchlist-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-btn\",\n                onClick: () => handleSelectStock(stock.symbol),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-btn\",\n                onClick: () => handleRemoveFromWatchlist(stock.symbol),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, stock.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Data will be stored in AWS DynamoDB in the production deployment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"UhEKUBi9W0MOy22NucEwgl5tWYU=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Watchlist","API_URLS","onSelectStock","_s","watchlist","setWatchlist","loading","setLoading","error","setError","newSymbol","setNewSymbol","dataLoaded","setDataLoaded","fetchWatchlistData","symbols","length","watchlistData","symbol","i","response","get","timeout","data","push","price","parseFloat","change","changePercent","volume","parseInt","err","console","localStorage","setItem","JSON","stringify","loadWatchlist","savedWatchlist","getItem","parsedWatchlist","parse","map","item","e","handleAddToWatchlist","toUpperCase","some","newItem","updatedWatchlist","setTimeout","handleRemoveFromWatchlist","filter","handleSelectStock","handleRefreshWatchlist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","value","onChange","target","placeholder","maxLength","stock","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/SU/Spring'25/IST 615 - Cloud Management/stock-market-app/src/components/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst Watchlist = ({ API_URLS, onSelectStock }) => {\n  const [watchlist, setWatchlist] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [newSymbol, setNewSymbol] = useState('');\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  // Fetch data for all watchlist symbols\n  const fetchWatchlistData = useCallback(async (symbols) => {\n    if (!symbols || symbols.length === 0) return;\n    \n    setLoading(true);\n    const watchlistData = [];\n    \n    for (const symbol of symbols) {\n      try {\n        // Try each API URL until one works\n        for (let i = 0; i < API_URLS.length; i++) {\n          try {\n            const response = await axios.get(\n              `${API_URLS[i]}?symbol=${symbol}`,\n              { timeout: 3000 } // Short timeout since we're fetching multiple stocks\n            );\n            \n            if (response.data && !response.data.error) {\n              watchlistData.push({\n                symbol: response.data['01. symbol'],\n                price: parseFloat(response.data['05. price']),\n                change: parseFloat(response.data['09. change']),\n                changePercent: response.data['10. change percent'],\n                volume: parseInt(response.data['06. volume'])\n              });\n              \n              break; // Exit the loop if successful\n            }\n          } catch (err) {\n            if (i === API_URLS.length - 1) {\n              console.error(`Failed to fetch data for ${symbol}`);\n              // Add with minimal data if API fails\n              watchlistData.push({\n                symbol: symbol,\n                price: 0,\n                change: 0,\n                changePercent: '0.00%',\n                volume: 0,\n                error: true\n              });\n            }\n          }\n        }\n      } catch (err) {\n        console.error(`Error fetching data for ${symbol}:`, err);\n      }\n    }\n    \n    setWatchlist(watchlistData);\n    setLoading(false);\n    setDataLoaded(true);\n    \n    // Save to localStorage (would be DynamoDB in AWS implementation)\n    localStorage.setItem('stockWatchlist', JSON.stringify(watchlistData));\n  }, [API_URLS, setLoading, setWatchlist, setDataLoaded]);\n\n  // Fetch watchlist data from API\n  useEffect(() => {\n    // Skip if data is already loaded\n    if (dataLoaded && watchlist.length > 0) {\n      return;\n    }\n    \n    // For now, we'll use localStorage to simulate a backend server\n    // In the final implementation, this would be replaced with DynamoDB through API Gateway\n    const loadWatchlist = () => {\n      const savedWatchlist = localStorage.getItem('stockWatchlist');\n      \n      if (savedWatchlist) {\n        try {\n          const parsedWatchlist = JSON.parse(savedWatchlist);\n          // Only load symbols, we'll fetch the latest data\n          const symbols = parsedWatchlist.map(item => item.symbol);\n          fetchWatchlistData(symbols);\n        } catch (e) {\n          console.error('Error loading watchlist from localStorage:', e);\n          // Start with default watchlist if there's an error\n          fetchWatchlistData(['AAPL', 'MSFT', 'GOOG']);\n        }\n      } else {\n        // Start with default watchlist if none exists\n        fetchWatchlistData(['AAPL', 'MSFT', 'GOOG']);\n      }\n    };\n    \n    loadWatchlist();\n  }, [dataLoaded, watchlist.length, API_URLS, fetchWatchlistData]);\n\n  // Add a new symbol to watchlist\n  const handleAddToWatchlist = async () => {\n    if (!newSymbol) return;\n    \n    const symbol = newSymbol.toUpperCase();\n    \n    // Check if already in watchlist\n    if (watchlist.some(item => item.symbol === symbol)) {\n      setNewSymbol('');\n      return;\n    }\n    \n    setLoading(true);\n    setDataLoaded(false); // Reset data loaded flag\n    \n    try {\n      // Try each API URL to validate the symbol\n      for (let i = 0; i < API_URLS.length; i++) {\n        try {\n          const response = await axios.get(\n            `${API_URLS[i]}?symbol=${symbol}`,\n            { timeout: 5000 }\n          );\n          \n          if (response.data && !response.data.error) {\n            const newItem = {\n              symbol: response.data['01. symbol'],\n              price: parseFloat(response.data['05. price']),\n              change: parseFloat(response.data['09. change']),\n              changePercent: response.data['10. change percent'],\n              volume: parseInt(response.data['06. volume'])\n            };\n            \n            const updatedWatchlist = [...watchlist, newItem];\n            setWatchlist(updatedWatchlist);\n            localStorage.setItem('stockWatchlist', JSON.stringify(updatedWatchlist));\n            \n            setNewSymbol('');\n            setLoading(false);\n            setDataLoaded(true); // Mark data as loaded\n            return;\n          }\n        } catch (err) {\n          if (i === API_URLS.length - 1) {\n            setError(`Could not find symbol: ${symbol}`);\n            setTimeout(() => setError(null), 3000);\n          }\n        }\n      }\n    } catch (err) {\n      setError('Error adding to watchlist');\n      setTimeout(() => setError(null), 3000);\n    }\n    \n    setLoading(false);\n    setNewSymbol('');\n  };\n\n  // Remove a symbol from watchlist\n  const handleRemoveFromWatchlist = (symbol) => {\n    const updatedWatchlist = watchlist.filter(item => item.symbol !== symbol);\n    setWatchlist(updatedWatchlist);\n    localStorage.setItem('stockWatchlist', JSON.stringify(updatedWatchlist));\n  };\n\n  // Handle stock selection\n  const handleSelectStock = (symbol) => {\n    if (onSelectStock) {\n      onSelectStock(symbol);\n    }\n  };\n\n  // Refresh watchlist data\n  const handleRefreshWatchlist = () => {\n    const symbols = watchlist.map(item => item.symbol);\n    setDataLoaded(false); // Reset data loaded flag for refresh\n    fetchWatchlistData(symbols);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"watchlist-header\">\n        <h2>Watchlist</h2>\n        <button onClick={handleRefreshWatchlist} disabled={loading}>\n          {loading ? 'Refreshing...' : 'Refresh'}\n        </button>\n      </div>\n      \n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          value={newSymbol}\n          onChange={(e) => setNewSymbol(e.target.value)}\n          placeholder=\"Add symbol (e.g., AAPL)\"\n          maxLength={5}\n        />\n        <button onClick={handleAddToWatchlist} disabled={loading || !newSymbol}>\n          Add\n        </button>\n      </div>\n      \n      {error && <p className=\"error\">{error}</p>}\n      \n      {watchlist.length === 0 ? (\n        <p className=\"empty-watchlist\">Your watchlist is empty. Add stocks to track them here.</p>\n      ) : (\n        <table className=\"watchlist-table\">\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>Change</th>\n              <th>Volume</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {watchlist.map((stock) => (\n              <tr key={stock.symbol} className=\"watchlist-item\">\n                <td>\n                  <strong onClick={() => handleSelectStock(stock.symbol)}>\n                    {stock.symbol}\n                  </strong>\n                </td>\n                <td>${stock.price.toFixed(2)}</td>\n                <td className={stock.change >= 0 ? 'price-up' : 'price-down'}>\n                  {stock.change >= 0 ? '+' : ''}{stock.change.toFixed(2)} ({stock.changePercent})\n                </td>\n                <td>{stock.volume.toLocaleString()}</td>\n                <td>\n                  <div className=\"watchlist-actions\">\n                    <button \n                      className=\"view-btn\" \n                      onClick={() => handleSelectStock(stock.symbol)}\n                    >\n                      View\n                    </button>\n                    <button \n                      className=\"remove-btn\" \n                      onClick={() => handleRemoveFromWatchlist(stock.symbol)}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      \n      <div className=\"disclaimer\">\n        <small>\n          Data will be stored in AWS DynamoDB in the production deployment.\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default Watchlist; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}