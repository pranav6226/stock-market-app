{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/stock-market-app/src/components/MarketNews.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketNews = ({\n  stockData\n}) => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // News API key\n  const NEWS_API_KEY = '161a8aed5bd4405b9b2eda4a0e09e9fd';\n\n  // Fetch news when stock data changes\n  useEffect(() => {\n    if (stockData && stockData['01. symbol']) {\n      fetchNewsForStock(stockData['01. symbol']);\n    }\n  }, [stockData]);\n\n  // Fetch news from the News API\n  const fetchNewsForStock = async symbol => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Search for stock market specific news about the company\n      const companyName = getCompanyName(symbol);\n      const query = encodeURIComponent(`(${symbol} OR ${companyName}) AND (stock market OR NYSE OR NASDAQ OR trading OR investors OR Wall Street)`);\n\n      // Use domains parameter to filter for financial news sources\n      const domains = 'finance.yahoo.com,investor.cnbc.com,fool.com,marketwatch.com,bloomberg.com,investors.com,wsj.com,barrons.com,ft.com,reuters.com';\n      const url = `https://newsapi.org/v2/everything?q=${query}&domains=${domains}&apiKey=${NEWS_API_KEY}&language=en&sortBy=publishedAt&pageSize=5`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch news data');\n      }\n      const data = await response.json();\n      if (data.status === 'ok' && data.articles) {\n        // Format news data\n        const formattedNews = data.articles.map((article, index) => ({\n          id: index,\n          title: article.title,\n          source: article.source.name,\n          time: formatNewsDate(article.publishedAt),\n          snippet: article.description,\n          url: article.url,\n          imageUrl: article.urlToImage\n        }));\n        setNews(formattedNews);\n\n        // If no financial news found, try a broader search with category=business\n        if (formattedNews.length === 0) {\n          fallbackToGeneralFinancialNews(symbol);\n        }\n      } else {\n        throw new Error(data.message || 'Invalid news data received');\n      }\n    } catch (err) {\n      console.error('Error fetching news:', err);\n      setError(err.message);\n      // Fall back to mock news if API fails\n      setNews(generateMockNews());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fallback to general financial news if no specific stock news found\n  const fallbackToGeneralFinancialNews = async symbol => {\n    try {\n      const companyName = getCompanyName(symbol);\n      // Try a broader search with top-headlines endpoint and category=business\n      const url = `https://newsapi.org/v2/top-headlines?country=us&category=business&q=${encodeURIComponent(companyName)}&apiKey=${NEWS_API_KEY}&pageSize=5`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch general financial news');\n      }\n      const data = await response.json();\n      if (data.status === 'ok' && data.articles && data.articles.length > 0) {\n        // Format news data\n        const formattedNews = data.articles.map((article, index) => ({\n          id: index,\n          title: article.title,\n          source: article.source.name,\n          time: formatNewsDate(article.publishedAt),\n          snippet: article.description,\n          url: article.url,\n          imageUrl: article.urlToImage\n        }));\n        setNews(formattedNews);\n      } else {\n        // If still no results, fall back to mock news\n        setNews(generateMockNews());\n      }\n    } catch (err) {\n      console.error('Error fetching general financial news:', err);\n      // Fall back to mock news\n      setNews(generateMockNews());\n    }\n  };\n\n  // Format the publishedAt date to a relative time\n  const formatNewsDate = dateString => {\n    const publishedDate = new Date(dateString);\n    const now = new Date();\n    const diffMs = now - publishedDate;\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    if (diffMins < 60) {\n      return `${diffMins} minute${diffMins !== 1 ? 's' : ''} ago`;\n    } else if (diffHours < 24) {\n      return `${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`;\n    } else {\n      return `${diffDays} day${diffDays !== 1 ? 's' : ''} ago`;\n    }\n  };\n\n  // Map common stock symbols to company names for better news results\n  const getCompanyName = symbol => {\n    const companyMap = {\n      'AAPL': 'Apple',\n      'MSFT': 'Microsoft',\n      'GOOGL': 'Google',\n      'GOOG': 'Google',\n      'AMZN': 'Amazon',\n      'META': 'Meta Facebook',\n      'TSLA': 'Tesla',\n      'NVDA': 'NVIDIA',\n      'JPM': 'JPMorgan Chase',\n      'BAC': 'Bank of America',\n      'WMT': 'Walmart',\n      'JNJ': 'Johnson and Johnson',\n      'PG': 'Procter and Gamble',\n      'MA': 'Mastercard',\n      'V': 'Visa',\n      'DIS': 'Disney',\n      'NFLX': 'Netflix',\n      'INTC': 'Intel',\n      'KO': 'Coca-Cola',\n      'PEP': 'PepsiCo'\n    };\n    return companyMap[symbol] || symbol;\n  };\n\n  // Generate mock news based on the stock data (fallback)\n  const generateMockNews = () => {\n    var _stockData$10Change;\n    if (!stockData || !stockData['01. symbol']) return [];\n    const symbol = stockData['01. symbol'];\n    const companyName = getCompanyName(symbol);\n    const change = parseFloat(stockData['09. change'] || 0);\n    const changePercent = parseFloat(((_stockData$10Change = stockData['10. change percent']) === null || _stockData$10Change === void 0 ? void 0 : _stockData$10Change.replace('%', '')) || 0);\n    const price = parseFloat(stockData['05. price'] || 0);\n    const isPositive = change >= 0;\n\n    // Market indexes for context\n    const indexes = ['S&P 500', 'Nasdaq', 'Dow Jones'];\n    const randomIndex = indexes[Math.floor(Math.random() * indexes.length)];\n\n    // Generate market-related news\n    const newsItems = [{\n      id: 1,\n      title: `${symbol} ${isPositive ? 'Rises' : 'Falls'} ${Math.abs(changePercent).toFixed(2)}% as ${randomIndex} ${isPositive ? 'Gains' : 'Drops'}`,\n      source: 'Market Watch',\n      time: '2 hours ago',\n      url: '#',\n      snippet: `Shares of ${companyName} (${symbol}) ${isPositive ? 'climbed' : 'fell'} by ${Math.abs(changePercent).toFixed(2)}% in today's trading session amid broader ${isPositive ? 'gains' : 'losses'} in the US markets. Wall Street analysts cite ${isPositive ? 'positive economic data' : 'recession fears'} as the main driver.`\n    }, {\n      id: 2,\n      title: `Wall Street Analysts Adjust ${symbol} Price Target to $${(price * 1.15).toFixed(2)} Following Earnings`,\n      source: 'CNBC',\n      time: '1 day ago',\n      url: '#',\n      snippet: `Major investment banks including Goldman Sachs and JP Morgan have revised their outlook for ${companyName}, with the consensus price target suggesting a potential ${(Math.random() * 10 + 5).toFixed(1)}% upside from current trading levels. Trading volume was ${(Math.random() * 50 + 50).toFixed(1)}% above the NYSE daily average.`\n    }, {\n      id: 3,\n      title: `${companyName} Shares React to Federal Reserve Policy Amid Volatile Trading Session`,\n      source: 'Yahoo Finance',\n      time: '3 days ago',\n      url: '#',\n      snippet: `${symbol} stock ${Math.random() > 0.5 ? 'rebounded' : 'retreated'} following the Federal Reserve's latest policy announcement. The company, which is a component of the ${randomIndex}, has seen its market position ${Math.random() > 0.6 ? 'strengthen' : 'weaken'} as investors assess the impact of interest rates on growth stocks.`\n    }, {\n      id: 4,\n      title: `Sector Analysis: How ${companyName} Compares to Industry Peers on Wall Street`,\n      source: 'Barron\\'s',\n      time: '5 days ago',\n      url: '#',\n      snippet: `A comprehensive analysis of the ${getStockSector(symbol)} sector reveals that ${companyName} is ${Math.random() > 0.5 ? 'outperforming' : 'underperforming'} its competitors on key metrics. Trading patterns suggest ${Math.random() > 0.5 ? 'institutional buying' : 'profit-taking'} has been the dominant force in recent NASDAQ sessions.`\n    }];\n    return newsItems;\n  };\n\n  // Get sector for a stock symbol\n  const getStockSector = symbol => {\n    if (['AAPL', 'MSFT', 'GOOG', 'GOOGL', 'META', 'NVDA', 'ADBE', 'CSCO', 'INTC'].includes(symbol)) {\n      return 'Technology';\n    } else if (['AMZN', 'TSLA', 'NFLX', 'DIS', 'CMCSA'].includes(symbol)) {\n      return 'Consumer Cyclical';\n    } else if (['JPM', 'BAC', 'V', 'MA', 'PYPL'].includes(symbol)) {\n      return 'Financial Services';\n    } else if (['JNJ', 'PFE', 'MRK', 'TMO'].includes(symbol)) {\n      return 'Healthcare';\n    } else if (['WMT', 'PG', 'COST', 'KO', 'PEP'].includes(symbol)) {\n      return 'Consumer Defensive';\n    }\n    return 'Stocks';\n  };\n\n  // Generate market insight data\n  const generateMarketInsights = () => {\n    if (!stockData || !stockData['01. symbol']) return null;\n\n    // Mock market cap based on price and a random multiplier\n    const price = parseFloat(stockData['05. price'] || 0);\n    const marketCapMultiplier = Math.floor(Math.random() * 900) + 100; // Between 100M and 1B shares\n    const marketCap = price * marketCapMultiplier * 1000000;\n\n    // Format market cap in billions or millions\n    const formattedMarketCap = marketCap >= 1000000000 ? `$${(marketCap / 1000000000).toFixed(2)}B` : `$${(marketCap / 1000000).toFixed(2)}M`;\n\n    // Random PE ratio between 10 and 40\n    const peRatio = (Math.random() * 30 + 10).toFixed(2);\n\n    // Random dividend yield between 0 and 4%\n    const dividendYield = (Math.random() * 4).toFixed(2);\n\n    // Random 52-week range\n    const currentPrice = parseFloat(stockData['05. price'] || 0);\n    const lowPrice = (currentPrice * (0.7 + Math.random() * 0.2)).toFixed(2);\n    const highPrice = (currentPrice * (1.1 + Math.random() * 0.3)).toFixed(2);\n    return {\n      marketCap: formattedMarketCap,\n      peRatio,\n      dividendYield: `${dividendYield}%`,\n      week52Range: `$${lowPrice} - $${highPrice}`,\n      averageVolume: `${(Math.floor(Math.random() * 9) + 1).toFixed(1)}M`,\n      beta: (0.8 + Math.random() * 1.2).toFixed(2)\n    };\n  };\n  const marketInsights = generateMarketInsights();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-section card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading news...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error loading news: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-list\",\n        children: news.length > 0 ? news.map(newsItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: newsItem.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: newsItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"news-source\",\n              children: newsItem.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"news-time\",\n              children: newsItem.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), newsItem.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: newsItem.imageUrl,\n            alt: newsItem.title,\n            className: \"news-image\",\n            onError: e => e.target.style.display = 'none'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: newsItem.snippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this)]\n        }, newsItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-news\",\n          children: \"No news available for this stock.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-insights card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Market Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), marketInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insights-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"Market Cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.marketCap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"P/E Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.peRatio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"Dividend Yield\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.dividendYield\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"52-Week Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.week52Range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"Avg. Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.averageVolume\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-label\",\n            children: \"Beta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-value\",\n            children: marketInsights.beta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketNews, \"uve2T0b20vs599QPJdXMUN1fa6A=\");\n_c = MarketNews;\nexport default MarketNews;\nvar _c;\n$RefreshReg$(_c, \"MarketNews\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MarketNews","stockData","_s","news","setNews","isLoading","setIsLoading","error","setError","NEWS_API_KEY","fetchNewsForStock","symbol","companyName","getCompanyName","query","encodeURIComponent","domains","url","response","fetch","ok","Error","data","json","status","articles","formattedNews","map","article","index","id","title","source","name","time","formatNewsDate","publishedAt","snippet","description","imageUrl","urlToImage","length","fallbackToGeneralFinancialNews","message","err","console","generateMockNews","dateString","publishedDate","Date","now","diffMs","diffMins","Math","floor","diffHours","diffDays","companyMap","_stockData$10Change","change","parseFloat","changePercent","replace","price","isPositive","indexes","randomIndex","random","newsItems","abs","toFixed","getStockSector","includes","generateMarketInsights","marketCapMultiplier","marketCap","formattedMarketCap","peRatio","dividendYield","currentPrice","lowPrice","highPrice","week52Range","averageVolume","beta","marketInsights","className","children","fileName","_jsxFileName","lineNumber","columnNumber","newsItem","href","target","rel","src","alt","onError","e","style","display","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/stock-market-app/src/components/MarketNews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MarketNews = ({ stockData }) => {\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // News API key\n  const NEWS_API_KEY = '161a8aed5bd4405b9b2eda4a0e09e9fd';\n  \n  // Fetch news when stock data changes\n  useEffect(() => {\n    if (stockData && stockData['01. symbol']) {\n      fetchNewsForStock(stockData['01. symbol']);\n    }\n  }, [stockData]);\n  \n  // Fetch news from the News API\n  const fetchNewsForStock = async (symbol) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Search for stock market specific news about the company\n      const companyName = getCompanyName(symbol);\n      const query = encodeURIComponent(`(${symbol} OR ${companyName}) AND (stock market OR NYSE OR NASDAQ OR trading OR investors OR Wall Street)`);\n      \n      // Use domains parameter to filter for financial news sources\n      const domains = 'finance.yahoo.com,investor.cnbc.com,fool.com,marketwatch.com,bloomberg.com,investors.com,wsj.com,barrons.com,ft.com,reuters.com';\n      \n      const url = `https://newsapi.org/v2/everything?q=${query}&domains=${domains}&apiKey=${NEWS_API_KEY}&language=en&sortBy=publishedAt&pageSize=5`;\n      \n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch news data');\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === 'ok' && data.articles) {\n        // Format news data\n        const formattedNews = data.articles.map((article, index) => ({\n          id: index,\n          title: article.title,\n          source: article.source.name,\n          time: formatNewsDate(article.publishedAt),\n          snippet: article.description,\n          url: article.url,\n          imageUrl: article.urlToImage\n        }));\n        \n        setNews(formattedNews);\n        \n        // If no financial news found, try a broader search with category=business\n        if (formattedNews.length === 0) {\n          fallbackToGeneralFinancialNews(symbol);\n        }\n      } else {\n        throw new Error(data.message || 'Invalid news data received');\n      }\n    } catch (err) {\n      console.error('Error fetching news:', err);\n      setError(err.message);\n      // Fall back to mock news if API fails\n      setNews(generateMockNews());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Fallback to general financial news if no specific stock news found\n  const fallbackToGeneralFinancialNews = async (symbol) => {\n    try {\n      const companyName = getCompanyName(symbol);\n      // Try a broader search with top-headlines endpoint and category=business\n      const url = `https://newsapi.org/v2/top-headlines?country=us&category=business&q=${encodeURIComponent(companyName)}&apiKey=${NEWS_API_KEY}&pageSize=5`;\n      \n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch general financial news');\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === 'ok' && data.articles && data.articles.length > 0) {\n        // Format news data\n        const formattedNews = data.articles.map((article, index) => ({\n          id: index,\n          title: article.title,\n          source: article.source.name,\n          time: formatNewsDate(article.publishedAt),\n          snippet: article.description,\n          url: article.url,\n          imageUrl: article.urlToImage\n        }));\n        \n        setNews(formattedNews);\n      } else {\n        // If still no results, fall back to mock news\n        setNews(generateMockNews());\n      }\n    } catch (err) {\n      console.error('Error fetching general financial news:', err);\n      // Fall back to mock news\n      setNews(generateMockNews());\n    }\n  };\n  \n  // Format the publishedAt date to a relative time\n  const formatNewsDate = (dateString) => {\n    const publishedDate = new Date(dateString);\n    const now = new Date();\n    const diffMs = now - publishedDate;\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffMins < 60) {\n      return `${diffMins} minute${diffMins !== 1 ? 's' : ''} ago`;\n    } else if (diffHours < 24) {\n      return `${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`;\n    } else {\n      return `${diffDays} day${diffDays !== 1 ? 's' : ''} ago`;\n    }\n  };\n  \n  // Map common stock symbols to company names for better news results\n  const getCompanyName = (symbol) => {\n    const companyMap = {\n      'AAPL': 'Apple',\n      'MSFT': 'Microsoft',\n      'GOOGL': 'Google',\n      'GOOG': 'Google',\n      'AMZN': 'Amazon',\n      'META': 'Meta Facebook',\n      'TSLA': 'Tesla',\n      'NVDA': 'NVIDIA',\n      'JPM': 'JPMorgan Chase',\n      'BAC': 'Bank of America',\n      'WMT': 'Walmart',\n      'JNJ': 'Johnson and Johnson',\n      'PG': 'Procter and Gamble',\n      'MA': 'Mastercard',\n      'V': 'Visa',\n      'DIS': 'Disney',\n      'NFLX': 'Netflix',\n      'INTC': 'Intel',\n      'KO': 'Coca-Cola',\n      'PEP': 'PepsiCo'\n    };\n    \n    return companyMap[symbol] || symbol;\n  };\n  \n  // Generate mock news based on the stock data (fallback)\n  const generateMockNews = () => {\n    if (!stockData || !stockData['01. symbol']) return [];\n    \n    const symbol = stockData['01. symbol'];\n    const companyName = getCompanyName(symbol);\n    const change = parseFloat(stockData['09. change'] || 0);\n    const changePercent = parseFloat(stockData['10. change percent']?.replace('%', '') || 0);\n    const price = parseFloat(stockData['05. price'] || 0);\n    const isPositive = change >= 0;\n    \n    // Market indexes for context\n    const indexes = ['S&P 500', 'Nasdaq', 'Dow Jones'];\n    const randomIndex = indexes[Math.floor(Math.random() * indexes.length)];\n    \n    // Generate market-related news\n    const newsItems = [\n      {\n        id: 1,\n        title: `${symbol} ${isPositive ? 'Rises' : 'Falls'} ${Math.abs(changePercent).toFixed(2)}% as ${randomIndex} ${isPositive ? 'Gains' : 'Drops'}`,\n        source: 'Market Watch',\n        time: '2 hours ago',\n        url: '#',\n        snippet: `Shares of ${companyName} (${symbol}) ${isPositive ? 'climbed' : 'fell'} by ${Math.abs(changePercent).toFixed(2)}% in today's trading session amid broader ${isPositive ? 'gains' : 'losses'} in the US markets. Wall Street analysts cite ${isPositive ? 'positive economic data' : 'recession fears'} as the main driver.`\n      },\n      {\n        id: 2,\n        title: `Wall Street Analysts Adjust ${symbol} Price Target to $${(price * 1.15).toFixed(2)} Following Earnings`,\n        source: 'CNBC',\n        time: '1 day ago',\n        url: '#',\n        snippet: `Major investment banks including Goldman Sachs and JP Morgan have revised their outlook for ${companyName}, with the consensus price target suggesting a potential ${(Math.random() * 10 + 5).toFixed(1)}% upside from current trading levels. Trading volume was ${(Math.random() * 50 + 50).toFixed(1)}% above the NYSE daily average.`\n      },\n      {\n        id: 3,\n        title: `${companyName} Shares React to Federal Reserve Policy Amid Volatile Trading Session`,\n        source: 'Yahoo Finance',\n        time: '3 days ago',\n        url: '#',\n        snippet: `${symbol} stock ${Math.random() > 0.5 ? 'rebounded' : 'retreated'} following the Federal Reserve's latest policy announcement. The company, which is a component of the ${randomIndex}, has seen its market position ${Math.random() > 0.6 ? 'strengthen' : 'weaken'} as investors assess the impact of interest rates on growth stocks.`\n      },\n      {\n        id: 4,\n        title: `Sector Analysis: How ${companyName} Compares to Industry Peers on Wall Street`,\n        source: 'Barron\\'s',\n        time: '5 days ago',\n        url: '#',\n        snippet: `A comprehensive analysis of the ${getStockSector(symbol)} sector reveals that ${companyName} is ${Math.random() > 0.5 ? 'outperforming' : 'underperforming'} its competitors on key metrics. Trading patterns suggest ${Math.random() > 0.5 ? 'institutional buying' : 'profit-taking'} has been the dominant force in recent NASDAQ sessions.`\n      }\n    ];\n    \n    return newsItems;\n  };\n  \n  // Get sector for a stock symbol\n  const getStockSector = (symbol) => {\n    if (['AAPL', 'MSFT', 'GOOG', 'GOOGL', 'META', 'NVDA', 'ADBE', 'CSCO', 'INTC'].includes(symbol)) {\n      return 'Technology';\n    } else if (['AMZN', 'TSLA', 'NFLX', 'DIS', 'CMCSA'].includes(symbol)) {\n      return 'Consumer Cyclical';\n    } else if (['JPM', 'BAC', 'V', 'MA', 'PYPL'].includes(symbol)) {\n      return 'Financial Services';\n    } else if (['JNJ', 'PFE', 'MRK', 'TMO'].includes(symbol)) {\n      return 'Healthcare';\n    } else if (['WMT', 'PG', 'COST', 'KO', 'PEP'].includes(symbol)) {\n      return 'Consumer Defensive';\n    }\n    return 'Stocks';\n  };\n  \n  // Generate market insight data\n  const generateMarketInsights = () => {\n    if (!stockData || !stockData['01. symbol']) return null;\n    \n    // Mock market cap based on price and a random multiplier\n    const price = parseFloat(stockData['05. price'] || 0);\n    const marketCapMultiplier = Math.floor(Math.random() * 900) + 100; // Between 100M and 1B shares\n    const marketCap = price * marketCapMultiplier * 1000000;\n    \n    // Format market cap in billions or millions\n    const formattedMarketCap = marketCap >= 1000000000 \n      ? `$${(marketCap / 1000000000).toFixed(2)}B` \n      : `$${(marketCap / 1000000).toFixed(2)}M`;\n    \n    // Random PE ratio between 10 and 40\n    const peRatio = (Math.random() * 30 + 10).toFixed(2);\n    \n    // Random dividend yield between 0 and 4%\n    const dividendYield = (Math.random() * 4).toFixed(2);\n    \n    // Random 52-week range\n    const currentPrice = parseFloat(stockData['05. price'] || 0);\n    const lowPrice = (currentPrice * (0.7 + Math.random() * 0.2)).toFixed(2);\n    const highPrice = (currentPrice * (1.1 + Math.random() * 0.3)).toFixed(2);\n    \n    return {\n      marketCap: formattedMarketCap,\n      peRatio,\n      dividendYield: `${dividendYield}%`,\n      week52Range: `$${lowPrice} - $${highPrice}`,\n      averageVolume: `${(Math.floor(Math.random() * 9) + 1).toFixed(1)}M`,\n      beta: (0.8 + Math.random() * 1.2).toFixed(2)\n    };\n  };\n  \n  const marketInsights = generateMarketInsights();\n  \n  return (\n    <div className=\"dashboard-bottom\">\n      <div className=\"news-section card\">\n        <h2>Latest News</h2>\n        {isLoading ? (\n          <div className=\"loading-indicator\">Loading news...</div>\n        ) : error ? (\n          <div className=\"error-message\">Error loading news: {error}</div>\n        ) : (\n          <div className=\"news-list\">\n            {news.length > 0 ? (\n              news.map(newsItem => (\n                <div key={newsItem.id} className=\"news-item\">\n                  <h3>\n                    <a href={newsItem.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {newsItem.title}\n                    </a>\n                  </h3>\n                  <div className=\"news-meta\">\n                    <span className=\"news-source\">{newsItem.source}</span>\n                    <span className=\"news-time\">{newsItem.time}</span>\n                  </div>\n                  {newsItem.imageUrl && (\n                    <img \n                      src={newsItem.imageUrl} \n                      alt={newsItem.title}\n                      className=\"news-image\"\n                      onError={(e) => e.target.style.display = 'none'}\n                    />\n                  )}\n                  <p>{newsItem.snippet}</p>\n                </div>\n              ))\n            ) : (\n              <div className=\"no-news\">No news available for this stock.</div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"market-insights card\">\n        <h2>Market Insights</h2>\n        {marketInsights && (\n          <div className=\"insights-grid\">\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">Market Cap</div>\n              <div className=\"insight-value\">{marketInsights.marketCap}</div>\n            </div>\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">P/E Ratio</div>\n              <div className=\"insight-value\">{marketInsights.peRatio}</div>\n            </div>\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">Dividend Yield</div>\n              <div className=\"insight-value\">{marketInsights.dividendYield}</div>\n            </div>\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">52-Week Range</div>\n              <div className=\"insight-value\">{marketInsights.week52Range}</div>\n            </div>\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">Avg. Volume</div>\n              <div className=\"insight-value\">{marketInsights.averageVolume}</div>\n            </div>\n            <div className=\"insight-item\">\n              <div className=\"insight-label\">Beta</div>\n              <div className=\"insight-value\">{marketInsights.beta}</div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MarketNews; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}