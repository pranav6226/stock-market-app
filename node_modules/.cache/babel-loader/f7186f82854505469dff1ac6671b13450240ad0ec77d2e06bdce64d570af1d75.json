{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/stock-market-app/src/components/StockChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = ({\n  stockData\n}) => {\n  // Creating mock data since we're only getting latest price\n  // In a real app, you would fetch historical data from an API\n  const prepareChartData = () => {\n    if (!stockData || !stockData['05. price']) {\n      return [];\n    }\n    const basePrice = parseFloat(stockData['05. price']);\n    const change = parseFloat(stockData['09. change'] || 0);\n\n    // Create mock daily price data for visualization\n    return [{\n      name: 'Open',\n      price: parseFloat(stockData['02. open'] || basePrice)\n    }, {\n      name: 'Low',\n      price: parseFloat(stockData['04. low'] || basePrice - Math.abs(change))\n    }, {\n      name: 'Current',\n      price: basePrice\n    }, {\n      name: 'High',\n      price: parseFloat(stockData['03. high'] || basePrice + Math.abs(change))\n    }];\n  };\n  const chartData = prepareChartData();\n\n  // Determine if stock is up or down for bar color\n  const isStockUp = parseFloat(stockData['09. change'] || 0) >= 0;\n  const barColor = isStockUp ? '#4CAF50' : '#F44336';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Price Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"80%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [dataMin => Math.floor(dataMin * 0.995), dataMax => Math.ceil(dataMax * 1.005)],\n          tickFormatter: value => `$${value.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => [`$${value.toFixed(2)}`, 'Price']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"price\",\n          fill: barColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '80%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available for chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","StockChart","stockData","prepareChartData","basePrice","parseFloat","change","name","price","Math","abs","chartData","isStockUp","barColor","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","length","width","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","dataMin","floor","dataMax","ceil","tickFormatter","value","toFixed","formatter","fill","display","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["/Users/pranav/stock-market-app/src/components/StockChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst StockChart = ({ stockData }) => {\n  // Creating mock data since we're only getting latest price\n  // In a real app, you would fetch historical data from an API\n  const prepareChartData = () => {\n    if (!stockData || !stockData['05. price']) {\n      return [];\n    }\n\n    const basePrice = parseFloat(stockData['05. price']);\n    const change = parseFloat(stockData['09. change'] || 0);\n    \n    // Create mock daily price data for visualization\n    return [\n      { name: 'Open', price: parseFloat(stockData['02. open'] || basePrice) },\n      { name: 'Low', price: parseFloat(stockData['04. low'] || (basePrice - Math.abs(change))) },\n      { name: 'Current', price: basePrice },\n      { name: 'High', price: parseFloat(stockData['03. high'] || (basePrice + Math.abs(change))) },\n    ];\n  };\n\n  const chartData = prepareChartData();\n  \n  // Determine if stock is up or down for bar color\n  const isStockUp = parseFloat(stockData['09. change'] || 0) >= 0;\n  const barColor = isStockUp ? '#4CAF50' : '#F44336';\n\n  return (\n    <div className=\"card\" style={{ height: '400px' }}>\n      <h2>Price Comparison</h2>\n      {chartData.length > 0 ? (\n        <ResponsiveContainer width=\"100%\" height=\"80%\">\n          <BarChart\n            data={chartData}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis \n              domain={[\n                (dataMin) => Math.floor(dataMin * 0.995),\n                (dataMax) => Math.ceil(dataMax * 1.005)\n              ]}\n              tickFormatter={(value) => `$${value.toFixed(2)}`}\n            />\n            <Tooltip \n              formatter={(value) => [`$${value.toFixed(2)}`, 'Price']}\n            />\n            <Legend />\n            <Bar dataKey=\"price\" fill={barColor} />\n          </BarChart>\n        </ResponsiveContainer>\n      ) : (\n        <div style={{ \n          height: '80%', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center' \n        }}>\n          <p>No data available for chart</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StockChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}